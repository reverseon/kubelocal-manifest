# Kustomize patch for RabbitMQ StatefulSet
# 
# Purpose: Make the Bitnami RabbitMQ Helm chart compatible with the official Docker RabbitMQ image
# 
# Background:
#   - The Bitnami Helm chart expects the Bitnami RabbitMQ image
#   - We're using the official Docker RabbitMQ image (docker.io/rabbitmq:4.1.1-management)
#   - The official image has different directory structures and authentication mechanisms
#
# This patch addresses three incompatibilities:
#   1. Init container: Fix plugin directory paths
#   2. Authentication: Add RABBITMQ_DEFAULT_USER/PASS for official image
#   3. Health checks: Use rabbitmq-diagnostics instead of curl (not available in official image)
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: sandbox
spec:
  template:
    spec:
      initContainers:
      # Patch 1: Fix init container for official Docker image plugin paths
      # 
      # Issue: Bitnami chart tries to source /opt/bitnami/scripts/liblog.sh which doesn't exist
      # Issue: Bitnami chart copies from /opt/bitnami/rabbitmq/plugins/ (Bitnami path)
      # Fix: Use /opt/rabbitmq/plugins/ (official Docker image path)
      # Fix: Create target directory before copying
      # Fix: Remove dependency on Bitnami-specific scripts
      - name: prepare-plugins-dir
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            
            echo "Copying plugins dir to empty dir"
            # In order to not break the possibility of installing custom plugins, we need
            # to make the plugins directory writable, so we need to copy it to an empty dir volume
            # Official Docker image has plugins at /opt/rabbitmq/plugins (not /opt/bitnami/rabbitmq/plugins)
            mkdir -p /emptydir/app-plugins-dir
            cp -r /opt/rabbitmq/plugins/* /emptydir/app-plugins-dir/
      containers:
      - name: rabbitmq
        env:
        # Patch 2: Fix authentication for official Docker image
        # 
        # Issue: Bitnami chart sets RABBITMQ_USERNAME and RABBITMQ_PASSWORD_FILE (Bitnami-specific)
        # Issue: Official Docker image expects RABBITMQ_DEFAULT_USER and RABBITMQ_DEFAULT_PASS
        # Fix: Add the correct environment variables for official image
        # 
        # Note: These env vars only take effect on first boot (when database is empty).
        # Once RabbitMQ has initialized, they are ignored. To change credentials on an 
        # existing deployment, you must either:
        #   1. Delete the PVC to reinitialize, OR
        #   2. Use rabbitmqctl to change the password manually
        # 
        # The password is sourced from the same secret that Bitnami chart generates from 
        # auth.password in values.yaml, ensuring consistency.
        - name: RABBITMQ_DEFAULT_USER
          value: "user"  # Must match auth.username in values.yaml
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: rabbitmq-password  # Generated from auth.password in values.yaml
        
        # Patch 3: Fix health probes for official Docker image
        # 
        # Issue: Bitnami chart uses curl commands for health checks
        # Issue: Official Docker image doesn't include curl
        # Fix: Use rabbitmq-diagnostics commands (recommended by RabbitMQ docs)
        # 
        # rabbitmq-diagnostics ping: Checks if node is alive and responding
        # rabbitmq-diagnostics check_running: Checks if RabbitMQ app is running and ready
        livenessProbe:
          exec:
            command:
              - rabbitmq-diagnostics
              - -q
              - ping
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - rabbitmq-diagnostics
              - -q
              - check_running
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3

